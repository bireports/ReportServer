changePasswordComplexityFail=heslo postr\u00E1d\u00E1 po\u017Eadovanou slo\u017Eitost\: {0}
changePasswordHistoryFail=nesm\u00ED znovu pou\u017E\u00EDt posledn\u00ED {0} hesel
changePasswordOnceInDays=m\u016F\u017Ee zm\u011Bnit heslo pouze jednou za {0} dn\u016F
deleteRightAbbreviation=d
deleteRightName=vymazat
executeRightAbbreviation=x
executeRightName=prov\u00E9st
grantAccessRightAbbreviation=g
grantAccessRightName=ud\u011Blit pr\u00E1va
lostPasswordMessageSubject=V\u00E1\u0161 p\u0159\u00EDstup k serveru sestav
lostPasswordMessageTemplate=Dobr\u00FD den, ${user.getFirstname()} ${user.getLastname()}, jak bylo po\u017Eadov\u00E1no, najdete v p\u0159\u00EDloze nov\u00E9 heslo pro p\u0159\u00EDstup k serveru sestav U\u017Eivatelsk\u00E9 jm\u00E9no\: ${user.getUsername()} Heslo\: {$ heslo} Vezm\u011Bte pros\u00EDm na v\u011Bdom\u00ED, \u017Ee je velk\u00E1 a mal\u00E1 p\u00EDsmena v obou u\u017Eivatelsk\u00FDm jm\u00E9nem a je vy\u017Eadov\u00E1no heslo pro \u00FAsp\u011B\u0161nou aplikaci.
passwordCharacterClassRequirement=mus\u00ED obsahovat alespo\u0148 {0} z {1}, ale pouze {2}, kde na\u0161el
passwordLengthSpec=d\u00E9lka mus\u00ED b\u00FDt alespo\u0148 {0}, ale heslo, ktere bylo dlouho pouze {1} znak\u016F
readRightAbbreviation=r
readRightName=\u010D\u00EDst
securitySecureeName=z\u00E1kladn\u00ED pr\u00E1va
writeRightAbbreviation=w
writeRightName=napsat
